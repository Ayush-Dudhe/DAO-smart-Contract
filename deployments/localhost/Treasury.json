{
  "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "isReleased",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fundsToTransfer",
          "type": "uint256"
        }
      ],
      "name": "releaseFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5a710e081abc00b3651d21110b32e24bcc1e615617cf3760cba2af52930e6a27",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "transactionIndex": 0,
    "gasUsed": "364767",
    "logsBloom": "0x
    "blockHash": "0x5c17015b81b69e00f730321f9ee2ff809ceea8e519b6d669c4c86394c3da85ec",
    "transactionHash": "0x5a710e081abc00b3651d21110b32e24bcc1e615617cf3760cba2af52930e6a27",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6,
        "transactionHash": "0x5a710e081abc00b3651d21110b32e24bcc1e615617cf3760cba2af52930e6a27",
        "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5c17015b81b69e00f730321f9ee2ff809ceea8e519b6d669c4c86394c3da85ec"
      }
    ],
    "blockNumber": 6,
    "cumulativeGasUsed": "364767",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d1d2d1c8dbdac0bdb1a941ca41627168",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"isReleased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundsToTransfer\",\"type\":\"uint256\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Rahul Chauhan\",\"details\":\"This contract is to be used by DAO to perform action. Owner of this contract should be TimeLock\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Treasury Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Accepts Ether from anyone.Owner of contract should be able to send ether to anyone.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.17;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n/// @title Treasury Contract\\r\\n/// @author Rahul Chauhan\\r\\n/// @notice Accepts Ether from anyone.Owner of contract should be able to send ether to anyone.\\r\\n/// @dev This contract is to be used by DAO to perform action. Owner of this contract should be TimeLock\\r\\n\\r\\ncontract Treasury is Ownable {\\r\\n  uint256 public totalFunds;\\r\\n  address public payee;\\r\\n  bool public isReleased;\\r\\n\\r\\n  event Log(address _addr, uint256 _value);\\r\\n\\r\\n  constructor() payable {\\r\\n    totalFunds = msg.value;\\r\\n    isReleased = false;\\r\\n  }\\r\\n\\r\\n  receive() external payable {\\r\\n    totalFunds += msg.value;\\r\\n    emit Log(msg.sender, msg.value);\\r\\n  }\\r\\n\\r\\n  fallback() external payable {\\r\\n    totalFunds += msg.value;\\r\\n    emit Log(msg.sender, msg.value);\\r\\n  }\\r\\n\\r\\n  function releaseFunds(\\r\\n    address _payee,\\r\\n    uint256 fundsToTransfer\\r\\n  ) public onlyOwner {\\r\\n    require(fundsToTransfer <= totalFunds, \\\"Insufficient Funds in treasury\\\");\\r\\n    isReleased = true;\\r\\n    totalFunds -= fundsToTransfer;\\r\\n    payable(_payee).transfer(fundsToTransfer);\\r\\n    // totalFunds -= fundsToTransfer;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x05bb014677964b5b97abe705aecd8272856404304c882e0a84c3786d64b3feef\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405261000d33610023565b346001556002805460ff60a01b19169055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104bd806100826000396000f3fe6080604052600436106100745760003560e01c8063ae90b2131161004e578063ae90b2131461014e578063d6e982e51461016e578063f2fde38b1461018e578063fa2a8997146101ae576100ca565b8063715018a6146100dc5780638da5cb5b146100f3578063968ed6001461012a576100ca565b366100ca57346001600082825461008b91906103f3565b9091555050604080513381523460208201527ff950957d2407bed19dc99b718b46b4ce6090c05589006dfb86fd22c34865b23e910160405180910390a1005b346001600082825461008b91906103f3565b3480156100e857600080fd5b506100f16101df565b005b3480156100ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013657600080fd5b5061014060015481565b604051908152602001610121565b34801561015a57600080fd5b5060025461010d906001600160a01b031681565b34801561017a57600080fd5b506100f1610189366004610428565b6101f3565b34801561019a57600080fd5b506100f16101a9366004610452565b6102ba565b3480156101ba57600080fd5b506002546101cf90600160a01b900460ff1681565b6040519015158152602001610121565b6101e7610333565b6101f1600061038d565b565b6101fb610333565b6001548111156102525760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742046756e647320696e207472656173757279000060448201526064015b60405180910390fd5b6002805460ff60a01b1916600160a01b1790556001805482919060009061027a908490610474565b90915550506040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156102b5573d6000803e3d6000fd5b505050565b6102c2610333565b6001600160a01b0381166103275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610249565b6103308161038d565b50565b6000546001600160a01b031633146101f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610406576104066103dd565b92915050565b80356001600160a01b038116811461042357600080fd5b919050565b6000806040838503121561043b57600080fd5b6104448361040c565b946020939093013593505050565b60006020828403121561046457600080fd5b61046d8261040c565b9392505050565b81810381811115610406576104066103dd56fea2646970667358221220ae975e4730dd5d5f59c087c0dc2609960fd6cf15781f4cd48076f63446e7b48664736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063ae90b2131161004e578063ae90b2131461014e578063d6e982e51461016e578063f2fde38b1461018e578063fa2a8997146101ae576100ca565b8063715018a6146100dc5780638da5cb5b146100f3578063968ed6001461012a576100ca565b366100ca57346001600082825461008b91906103f3565b9091555050604080513381523460208201527ff950957d2407bed19dc99b718b46b4ce6090c05589006dfb86fd22c34865b23e910160405180910390a1005b346001600082825461008b91906103f3565b3480156100e857600080fd5b506100f16101df565b005b3480156100ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013657600080fd5b5061014060015481565b604051908152602001610121565b34801561015a57600080fd5b5060025461010d906001600160a01b031681565b34801561017a57600080fd5b506100f1610189366004610428565b6101f3565b34801561019a57600080fd5b506100f16101a9366004610452565b6102ba565b3480156101ba57600080fd5b506002546101cf90600160a01b900460ff1681565b6040519015158152602001610121565b6101e7610333565b6101f1600061038d565b565b6101fb610333565b6001548111156102525760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742046756e647320696e207472656173757279000060448201526064015b60405180910390fd5b6002805460ff60a01b1916600160a01b1790556001805482919060009061027a908490610474565b90915550506040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156102b5573d6000803e3d6000fd5b505050565b6102c2610333565b6001600160a01b0381166103275760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610249565b6103308161038d565b50565b6000546001600160a01b031633146101f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610406576104066103dd565b92915050565b80356001600160a01b038116811461042357600080fd5b919050565b6000806040838503121561043b57600080fd5b6104448361040c565b946020939093013593505050565b60006020828403121561046457600080fd5b61046d8261040c565b9392505050565b81810381811115610406576104066103dd56fea2646970667358221220ae975e4730dd5d5f59c087c0dc2609960fd6cf15781f4cd48076f63446e7b48664736f6c63430008110033",
  "devdoc": {
    "author": "Rahul Chauhan",
    "details": "This contract is to be used by DAO to perform action. Owner of this contract should be TimeLock",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Treasury Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Accepts Ether from anyone.Owner of contract should be able to send ether to anyone.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 396,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11708,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "totalFunds",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 11710,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "payee",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 11712,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "isReleased",
        "offset": 20,
        "slot": "2",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}