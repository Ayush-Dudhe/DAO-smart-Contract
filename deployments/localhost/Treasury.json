{
  "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "isReleased",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "fundsToTransfer",
          "type": "uint256"
        }
      ],
      "name": "releaseFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x43efce0063f3989c75735e8b4f064a9bb8c356d319bf011784b3cb7dfd3e7cf2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "transactionIndex": 0,
    "gasUsed": "364119",
    "logsBloom": "0x
    "blockHash": "0x78eb5b410fb032888c3e3b58cd9610b410c3b80e415761db5cf3420c84a5001d",
    "transactionHash": "0x43efce0063f3989c75735e8b4f064a9bb8c356d319bf011784b3cb7dfd3e7cf2",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6,
        "transactionHash": "0x43efce0063f3989c75735e8b4f064a9bb8c356d319bf011784b3cb7dfd3e7cf2",
        "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x78eb5b410fb032888c3e3b58cd9610b410c3b80e415761db5cf3420c84a5001d"
      }
    ],
    "blockNumber": 6,
    "cumulativeGasUsed": "364119",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3ce957f6711cbca15ce8dcaf5693832d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"isReleased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fundsToTransfer\",\"type\":\"uint256\"}],\"name\":\"releaseFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n// Accept Ether from anyone.\\n// owner of contract should be able to send ether to anyone.\\n\\ncontract Treasury is Ownable {\\n  uint256 public totalFunds;\\n  address public payee;\\n  bool public isReleased;\\n\\n  event Log(address _addr, uint256 _value);\\n\\n  constructor() payable {\\n    totalFunds = msg.value;\\n    isReleased = false;\\n  }\\n\\n  receive() external payable {\\n    totalFunds += msg.value;\\n    emit Log(msg.sender, msg.value);\\n  }\\n\\n  fallback() external payable {\\n    totalFunds += msg.value;\\n    emit Log(msg.sender, msg.value);\\n  }\\n\\n  function releaseFunds(\\n    address _payee,\\n    uint256 fundsToTransfer\\n  ) public onlyOwner {\\n    require(fundsToTransfer <= totalFunds, \\\"Insufficient Funds in treasury\\\");\\n    isReleased = true;\\n    payable(_payee).transfer(fundsToTransfer);\\n    totalFunds -= fundsToTransfer;\\n  }\\n}\\n\",\"keccak256\":\"0xce61ccfe182fe954fbd952a3ded709b51e1d140a79677a649dfc0357ed7a24f1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405261000d33610023565b346001556002805460ff60a01b19169055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104ba806100826000396000f3fe6080604052600436106100745760003560e01c8063ae90b2131161004e578063ae90b2131461014e578063d6e982e51461016e578063f2fde38b1461018e578063fa2a8997146101ae576100ca565b8063715018a6146100dc5780638da5cb5b146100f3578063968ed6001461012a576100ca565b366100ca57346001600082825461008b91906103f0565b9091555050604080513381523460208201527ff950957d2407bed19dc99b718b46b4ce6090c05589006dfb86fd22c34865b23e910160405180910390a1005b346001600082825461008b91906103f0565b3480156100e857600080fd5b506100f16101df565b005b3480156100ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013657600080fd5b5061014060015481565b604051908152602001610121565b34801561015a57600080fd5b5060025461010d906001600160a01b031681565b34801561017a57600080fd5b506100f1610189366004610425565b6101f3565b34801561019a57600080fd5b506100f16101a936600461044f565b6102b7565b3480156101ba57600080fd5b506002546101cf90600160a01b900460ff1681565b6040519015158152602001610121565b6101e7610330565b6101f1600061038a565b565b6101fb610330565b6001548111156102525760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742046756e647320696e207472656173757279000060448201526064015b60405180910390fd5b6002805460ff60a01b1916600160a01b1790556040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561029b573d6000803e3d6000fd5b5080600160008282546102ae9190610471565b90915550505050565b6102bf610330565b6001600160a01b0381166103245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610249565b61032d8161038a565b50565b6000546001600160a01b031633146101f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610403576104036103da565b92915050565b80356001600160a01b038116811461042057600080fd5b919050565b6000806040838503121561043857600080fd5b61044183610409565b946020939093013593505050565b60006020828403121561046157600080fd5b61046a82610409565b9392505050565b81810381811115610403576104036103da56fea26469706673582212208db3357743dded8a792d45f62f118afd1fd37e9b4e9648212a544a4405926ac064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063ae90b2131161004e578063ae90b2131461014e578063d6e982e51461016e578063f2fde38b1461018e578063fa2a8997146101ae576100ca565b8063715018a6146100dc5780638da5cb5b146100f3578063968ed6001461012a576100ca565b366100ca57346001600082825461008b91906103f0565b9091555050604080513381523460208201527ff950957d2407bed19dc99b718b46b4ce6090c05589006dfb86fd22c34865b23e910160405180910390a1005b346001600082825461008b91906103f0565b3480156100e857600080fd5b506100f16101df565b005b3480156100ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013657600080fd5b5061014060015481565b604051908152602001610121565b34801561015a57600080fd5b5060025461010d906001600160a01b031681565b34801561017a57600080fd5b506100f1610189366004610425565b6101f3565b34801561019a57600080fd5b506100f16101a936600461044f565b6102b7565b3480156101ba57600080fd5b506002546101cf90600160a01b900460ff1681565b6040519015158152602001610121565b6101e7610330565b6101f1600061038a565b565b6101fb610330565b6001548111156102525760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742046756e647320696e207472656173757279000060448201526064015b60405180910390fd5b6002805460ff60a01b1916600160a01b1790556040516001600160a01b0383169082156108fc029083906000818181858888f1935050505015801561029b573d6000803e3d6000fd5b5080600160008282546102ae9190610471565b90915550505050565b6102bf610330565b6001600160a01b0381166103245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610249565b61032d8161038a565b50565b6000546001600160a01b031633146101f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610403576104036103da565b92915050565b80356001600160a01b038116811461042057600080fd5b919050565b6000806040838503121561043857600080fd5b61044183610409565b946020939093013593505050565b60006020828403121561046157600080fd5b61046a82610409565b9392505050565b81810381811115610403576104036103da56fea26469706673582212208db3357743dded8a792d45f62f118afd1fd37e9b4e9648212a544a4405926ac064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "totalFunds",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 143,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "payee",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 145,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "isReleased",
        "offset": 20,
        "slot": "2",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}